--- a/pkg/collector/collector.go
+++ b/pkg/collector/collector.go
@@ -396,8 +396,8 @@ func (c *Collector) parsePacket(packet gopacket.Packet) *common.NetworkEvent {
 	// 判断流量方向
 	event.Direction = c.getTrafficDirection(srcIP, dstIP)
 
-	// 处理出站流量（包括内网和外网）
-	if strings.HasPrefix(event.Direction, "outbound") {
+	// 处理出站和入站流量（包括内网和外网）
+	if strings.HasPrefix(event.Direction, "outbound") || strings.HasPrefix(event.Direction, "inbound") {
 		// 解析应用层
 		c.parseApplicationLayer(packet, event)
 
@@ -437,9 +437,15 @@ func (c *Collector) parsePacket(packet gopacket.Packet) *common.NetworkEvent {
 		}
 
 		// 为内网流量添加特殊标记
-		if event.Direction == "outbound_internal" {
+		if strings.HasPrefix(event.Direction, "outbound") && strings.Contains(event.Direction, "internal") {
 			c.logger.Debugf("解析到内网出站数据包: %s -> %s (%s:%d) domain=%s",
 				event.SourceIP, event.DestIP, event.Protocol, event.DestPort, event.Domain)
+		} else if strings.HasPrefix(event.Direction, "inbound") && strings.Contains(event.Direction, "internal") {
+			c.logger.Debugf("解析到内网入站数据包: %s -> %s (%s:%d) domain=%s",
+				event.SourceIP, event.DestIP, event.Protocol, event.DestPort, event.Domain)
+		} else if strings.HasPrefix(event.Direction, "inbound") {
+			c.logger.Debugf("解析到外网入站数据包: %s -> %s (%s:%d) domain=%s",
+				event.SourceIP, event.DestIP, event.Protocol, event.DestPort, event.Domain)
 		} else {
 			c.logger.Debugf("解析到外网出站数据包: %s -> %s (%s:%d) domain=%s",
 				event.SourceIP, event.DestIP, event.Protocol, event.DestPort, event.Domain)
