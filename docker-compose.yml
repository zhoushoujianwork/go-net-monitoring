version: '3.8'

services:
  # 网络监控服务器
  server:
    image: zhoushoujian/go-net-monitoring:latest
    container_name: netmon-server
    environment:
      - COMPONENT=server
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - LOG_LEVEL=info
      - STORAGE_TYPE=memory
      - STORAGE_RETENTION=24h
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - netmon

  # 网络监控代理
  agent:
    image: zhoushoujian/go-net-monitoring:latest
    container_name: netmon-agent
    environment:
      - COMPONENT=agent
      - NETWORK_INTERFACE=eth0
      - SERVER_URL=http://server:8080/api/v1/metrics
      - REPORT_INTERVAL=10s
      - LOG_LEVEL=info
      - BUFFER_SIZE=1000
      - IGNORE_LOCALHOST=true
    depends_on:
      - server
    network_mode: host  # 需要访问主机网络接口
    privileged: true    # 需要特权模式进行网络监控
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "agent"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Prometheus (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: netmon-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - netmon
    profiles:
      - monitoring

  # Grafana (可选)
  grafana:
    image: grafana/grafana:latest
    container_name: netmon-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - netmon
    profiles:
      - monitoring

networks:
  netmon:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
