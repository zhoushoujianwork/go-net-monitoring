version: '3.8'

services:
  # 网络监控Server
  network-server:
    build: .
    container_name: network-server
    ports:
      - "8080:8080"
    volumes:
      - ./configs/server.yaml:/app/configs/server.yaml:ro
      - ./logs:/app/logs
    environment:
      - SERVER_HTTP_HOST=0.0.0.0
      - SERVER_HTTP_PORT=8080
      - SERVER_LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - monitoring

  # 网络监控Agent
  network-agent:
    build: .
    container_name: network-agent
    command: ["/app/bin/agent", "--config", "/app/configs/agent.yaml"]
    volumes:
      - ./configs/agent.yaml:/app/configs/agent.yaml:ro
      - ./logs:/app/logs
      - /proc:/host/proc:ro
    environment:
      - AGENT_SERVER_HOST=network-server
      - AGENT_SERVER_PORT=8080
      - AGENT_LOG_LEVEL=info
    privileged: true
    network_mode: host
    restart: unless-stopped
    depends_on:
      network-server:
        condition: service_healthy

  # Prometheus (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./examples/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring

  # Grafana (可选)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./examples/grafana-dashboard.json:/var/lib/grafana/dashboards/network-monitoring.json:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - prometheus

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
