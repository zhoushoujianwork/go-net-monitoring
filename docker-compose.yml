version: '3.8'

services:
  # Redis 数据库 (持久化存储)
  redis:
    image: redis:7-alpine
    container_name: netmon-redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - netmon

  # 网络监控服务器
  server:
    build: 
      context: .
      dockerfile: Dockerfile
    image: zhoushoujian/go-net-monitoring:latest
    container_name: netmon-server
    environment:
      - COMPONENT=server
      - REDIS_HOST=redis
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    ports:
      - "8080:8080"
    volumes:
      - ./configs/server.yaml:/app/configs/server.yaml:ro
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - netmon

  # 网络监控代理
  agent:
    build: 
      context: .
      dockerfile: Dockerfile
    image: zhoushoujian/go-net-monitoring:latest
    container_name: netmon-agent
    environment:
      - COMPONENT=agent
      - HOSTNAME=${HOSTNAME:-netmon-agent}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      - server
    network_mode: host  # 需要访问主机网络接口
    privileged: true    # 需要特权模式进行网络监控
    volumes:
      - ./configs/agent.yaml:/app/configs/agent.yaml:ro
      - ./logs:/app/logs
      - ./agent/:/var/lib/netmon  # 持久化Agent状态
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "agent"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Prometheus 监控 (可选，使用 --profile monitoring 启动)
  prometheus:
    image: prom/prometheus:latest
    container_name: netmon-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - netmon
    profiles:
      - monitoring

  # Grafana 仪表板 (可选，使用 --profile monitoring 启动)
  grafana:
    image: grafana/grafana:latest
    container_name: netmon-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - no_proxy=localhost,127.0.0.1,prometheus,server,redis,172.25.0.0/16
      - NO_PROXY=localhost,127.0.0.1,prometheus,server,redis,172.25.0.0/16
    volumes:
      - ./data/grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    networks:
      - netmon
    profiles:
      - monitoring

networks:
  netmon:
    driver: bridge